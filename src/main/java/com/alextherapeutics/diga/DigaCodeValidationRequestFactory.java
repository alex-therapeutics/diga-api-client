package com.alextherapeutics.diga;

import com.alextherapeutics.diga.model.xml.pruefung.NachrichtentypStp;
import com.alextherapeutics.diga.model.xml.pruefung.ObjectFactory;
import com.alextherapeutics.diga.model.xml.pruefung.PruefungFreischaltcode;
import com.alextherapeutics.diga.model.xml.pruefung.VerfahrenskennungStp;
import lombok.Builder;
import lombok.NonNull;
import lombok.extern.slf4j.Slf4j;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.datatype.DatatypeFactory;
import java.io.ByteArrayOutputStream;
import java.io.IOException;

/**
 * Creates XML data bodies for code requests.
 * Depends on beans generated by JAXB
 */
@Slf4j
public class DigaCodeValidationRequestFactory {
    private String senderIk;
    private String digaId;

    private JAXBContext context;
    private Marshaller marshaller;
    private ObjectFactory objectFactory;
    private DatatypeFactory datatypeFactory;

    private static final String PRUEFUNG_VERSION = "002.000.000";
    private static final String PRUEFUNG_GUELTIGAB = "2020-07-01";

    @Builder
    public DigaCodeValidationRequestFactory(@NonNull String senderIk, @NonNull String digaId) throws JAXBException {
        this.senderIk = DigaUtils.ikNumberWithoutPrefix(senderIk);
        this.digaId = digaId;
        init();
    }

    private void init() throws JAXBException {
        objectFactory = new ObjectFactory();
        context = JAXBContext.newInstance(PruefungFreischaltcode.class);
        marshaller = context.createMarshaller();
        marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
        datatypeFactory = DatatypeFactory.newDefaultInstance();
    }

    /**
     * Return a byte array containing a PruefungFreischaltcode - Anfrage XML request
     * @param digaCode
     * @param receiverIk
     * @return
     * @throws JAXBException
     * @throws IOException
     */
    public byte[] createCodeValidationRequest(String digaCode, String receiverIk) throws JAXBException, IOException {
        return createCodeValidationRequest(digaCode,receiverIk, VerfahrenskennungStp.EDFC_0);
    }
    public byte[] createCodeValidationRequest(String digaCode, String receiverIk, VerfahrenskennungStp processIdentifier) throws JAXBException, IOException {
        var receiverIkWithoutPrefix = DigaUtils.ikNumberWithoutPrefix(receiverIk);
        var anfrage = objectFactory.createPruefungFreischaltcodeAnfrage();
        anfrage.setIKDiGAHersteller(senderIk);
        anfrage.setIKKrankenkasse(receiverIkWithoutPrefix);
        anfrage.setDiGAID(digaId);
        anfrage.setFreischaltcode(digaCode);

        var request = objectFactory.createPruefungFreischaltcode();
        request.setAnfrage(anfrage);
        request.setVerfahrenskennung(processIdentifier);
        request.setGueltigab(datatypeFactory.newXMLGregorianCalendar(PRUEFUNG_GUELTIGAB));
        request.setAbsender(senderIk);
        request.setEmpfaenger(receiverIkWithoutPrefix);
        request.setNachrichtentyp(NachrichtentypStp.ANF);
        request.setVersion(PRUEFUNG_VERSION);

        try (var res = new ByteArrayOutputStream()) {
            marshaller.marshal(request, res);
            return res.toByteArray();
        }
    }
}
